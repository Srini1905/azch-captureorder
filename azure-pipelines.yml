variables:
  
  - group: captureorder-variables # Variable Group containing 'mongoHost', 'mongoUser'
  #- group: captureorder-variables-akv # Variable Group containing  secret 'mongoPassword'
  - name: dockerRegistryServiceConnection
    value: 'aksworkshopcontainerregistryconnection' # make sure it matches the name you used in the service connection
  
  - name: acrEndpoint
    value: 'aksworkshopacrdzomefukac.azurecr.io' # replace with container registry endpoint

  - name: tag
    value: '$(Build.BuildId)'

stages:


- stage: DeployCI
  displayName: Deploy to CI stage
  #dependsOn: Build

  variables:
  - name: k8sNamespace # Kubernetes Namespace to deploy to. This variable is scoped to the DeployCI stage.
    value: 'ci'
      
  jobs:
  - deployment: DeployCI
    displayName: Deploy to ci job
    pool:
      vmImage: ubuntu-latest

    environment: 'aksworkshopci.ci' # name of the environment to target [env name.namespace]. This will pull in the Kubernetes service connection automatically

    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@1
            inputs:
              artifactName: 'manifests'
              downloadPath: '$(System.ArtifactsDirectory)/manifests'

          - task: KubernetesManifest@0
            displayName: Create secret for MongoDB
            inputs:
              action: createSecret
              secretName: mongodb
              secretType: generic
              namespace: $(k8sNamespace)
              secretArguments: --from-literal=mongoHost=$(mongoHost) --from-literal=mongoUser=$(mongoUser) --from-literal=mongoPassword=$(mongoPassword)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              namespace: $(k8sNamespace)
              manifests: $(System.ArtifactsDirectory)/manifests/*
              containers: '$(acrEndpoint)/captureorder:$(tag)'
- stage: DeployTEST
  displayName: Deploy to TEST stage
  #dependsOn: Build

  variables:
  - name: k8sNamespace # Kubernetes Namespace to deploy to. This variable is scoped to the DeployTest stage.
    value: 'test'
      
  jobs:
  - deployment: DeployTEST
    displayName: Deploy to TEST job
    pool:
      vmImage: ubuntu-latest

    environment: 'aksworkshoptest.test' # name of the environment to target [env name.namespace]. This will pull in the Kubernetes service connection automatically

    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@1
            inputs:
              artifactName: 'manifests'
              downloadPath: '$(System.ArtifactsDirectory)/manifests'

          - task: KubernetesManifest@0
            displayName: Create secret for MongoDB
            inputs:
              action: createSecret
              secretName: mongodb
              secretType: generic
              namespace: $(k8sNamespace)
              secretArguments: --from-literal=mongoHost=$(mongoHost) --from-literal=mongoUser=$(mongoUser) --from-literal=mongoPassword=$(mongoPassword)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              namespace: $(k8sNamespace)
              manifests: $(System.ArtifactsDirectory)/manifests/*
              containers: '$(acrEndpoint)/captureorder:$(tag)'
